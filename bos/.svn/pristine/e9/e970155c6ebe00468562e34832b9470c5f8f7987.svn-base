package com.chao.bos.web.action;

import java.io.IOException;

import org.apache.struts2.ServletActionContext;
import org.hibernate.criterion.DetachedCriteria;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.chao.bos.domain.Staff;
import com.chao.bos.service.IStaffService;
import com.chao.bos.utils.PageBean;
import com.chao.bos.web.action.base.BaseAction;

import net.sf.json.JSONObject;
import net.sf.json.JsonConfig;

/**
 * 取派员管理
 * 
 * @author
 *
 */
@Controller
@Scope("prototype")
public class StaffAction extends BaseAction<Staff> {

	// 注入Service
	@Autowired
	private IStaffService staffService;

	// 属性驱动
	private int page;// 页码
	private int rows;// 每页显示的记录数

	public void setRows(int rows) {
		this.rows = rows;
	}

	public void setPage(int page) {
		this.page = page;
	}

	/**
	 * 添加取派员
	 */
	public String add() {
		staffService.save(model);
		return "list";
	}

	/**
	 * 分页查询方法
	 * 
	 * @throws IOException
	 */
	public String pageQuery() throws IOException {
		PageBean pageBean = new PageBean();
		pageBean.setCurrentPage(page);
		pageBean.setPageSize(rows);
		DetachedCriteria detachedCriteria = DetachedCriteria.forClass(Staff.class);
		pageBean.setDetachedCriteria(detachedCriteria);

		staffService.pageQuery(pageBean);

		// 将PageBean对象转为json返回
		JsonConfig jsonConfig = new JsonConfig();
		jsonConfig.setExcludes(new String[] { "currentPage", "detachedCriteria", "pageSize" });
		JSONObject jsonObject = JSONObject.fromObject(pageBean, jsonConfig);
		String json = jsonObject.toString();
		ServletActionContext.getResponse().setContentType("text/json;charset=UTF-8");
		ServletActionContext.getResponse().getWriter().print(json);
		return NONE;
	}

	// 接收ids参数，属性驱动
	private String ids;

	public void setIds(String ids) {
		this.ids = ids;
	}

	/**
	 * 批量删除功能（逻辑删除）
	 * 
	 * @return
	 */
	public String delete() {
		staffService.deleteBatch(ids);
		return "list";
	}
	
	/**
	 * 修改取派员信息
	 */
	public String edit(){
		//显查询数据库中原始数据
		Staff staff = staffService.findById(model.getId());
		
		//再按照页面提交的参数进行覆盖
		staff.setName(model.getName());
		staff.setTelephone(model.getTelephone());
		staff.setStation(model.getStation());
		staff.setHaspda(model.getHaspda());
		staff.setStandard(model.getStandard());
		
		staffService.update(staff);
		return "list";
	}
}
