package com.chao.bos.service.impl;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.transaction.annotation.Transactional;
import org.activiti.engine.HistoryService;
import org.activiti.engine.RuntimeService;
import org.activiti.engine.TaskService;
import org.activiti.engine.task.Task;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.chao.bos.dao.IWorkordermanageDao;
import com.chao.bos.domain.Workordermanage;
import com.chao.bos.service.IWorkordermanageService;

@Service
@Transactional
public class WorkordermanageServiceImpl implements IWorkordermanageService{
	@Autowired
	private IWorkordermanageDao workordermanageDao;
	@Resource
	private RuntimeService runtimeService;
	@Autowired
	private TaskService taskService;
	@Autowired
	private HistoryService historyService;
	
	public void save(Workordermanage model) {
		model.setUpdatetime(new Date());
		workordermanageDao.save(model);
	}

	/**
	 * 查询start为0的工作单
	 */
	public List<Workordermanage> findListNotStart() {
		DetachedCriteria detachedCriteria = DetachedCriteria.forClass(Workordermanage.class);
		detachedCriteria.add(Restrictions.eq("start", "0"));
		return workordermanageDao.findByCriteria(detachedCriteria);
	}

	/**
	 * 启动流程实例，修改流程变量start为1
	 */
	public void start(String id) {
		Workordermanage workordermanage = workordermanageDao.findById(id);
		workordermanage.setStart("1"); //已启动
		String processDefinitionKey = "transfer"; //流程定义key
		String businessKey = id; 
		Map<String, Object> variables = new HashMap<>();
		variables.put("业务数据", workordermanage);
		runtimeService.startProcessInstanceByKey(processDefinitionKey, businessKey,variables);
	}

	@Override
	public Workordermanage findById(String workordermanageId) {
		return workordermanageDao.findById(workordermanageId);
	}

	/**
	 * 处理审核工作单任务
	 */
	@Override
	public void checkWorkordermanage(String taskId, Integer check, String id) {
		//如果审核不通过，修改start为0
		Workordermanage workordermanage = workordermanageDao.findById(id);
		Task task = taskService.createTaskQuery().taskId(taskId).singleResult();
		//根据任务对象查询实例流程id
		Map<String, Object> variables = new HashMap<>();
		variables.put("check", check);
		//办理审核工作单任务
		String processInstanceId = task.getProcessInstanceId();
		taskService.complete(taskId,variables);
		if(check==0){
			//审核不通过
			//删除历史流程实例数据
			workordermanage.setStart("0");
			historyService.deleteHistoricProcessInstance(processInstanceId);
		}
	}

	
	
	
}
